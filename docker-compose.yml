services:
  harbor-core:
    image: goharbor/harbor-core:v2.12.0
    container_name: harbor-core
    restart: always
    user: "10000:10000"
    ports:
      - "8084:8080"
      - "8444:8443"
    volumes:
      - /data/harbor/core:/data:rw
      - ./certs:/certs:rw
      - type: bind
        source: ./harbor.yml
        target: /etc/harbor/harbor.yml
    networks:
      harbor-net:
        aliases:
          - harbor-core.local
      paqbot_network:
        aliases:
          - harbor-core.paqbot
    depends_on:
      - harbor-db
      - redis
    environment:
      - CORE_SECRET=${HARBOR_CORE_SECRET:-change-this-password}
      - REGISTRY_URL=http://registry:5000
      - PORTAL_URL=http://portal:8084
      - TOKEN_SERVICE_URL=http://core:8084/service/token
      - HARBOR_ADMIN_PASSWORD=${HARBOR_ADMIN_PASSWORD:-Harbor12345}
      - POSTGRESQL_HOST=paqbot_database
      - POSTGRESQL_PORT=5400
      - POSTGRESQL_DATABASE=harbor
      - POSTGRESQL_USERNAME=harbor_user
      - POSTGRESQL_PASSWORD=${DB_PASSWORD:-root123}
      - PAQBOT_ENGINE_URL=http://paqbot_engine:5100
      - CONTENT_TRUST_ENABLED=true
      - SCAN_ON_PUSH=true

  harbor-db:
    image: goharbor/harbor-db:v2.12.0
    container_name: harbor-db
    restart: always
    user: "10000:10000"
    volumes:
      - /data/harbor/database:/var/lib/postgresql/data:rw
    networks:
      harbor-net:
        aliases:
          - harbor-db.local
      paqbot_network:
        aliases:
          - harbor-db.paqbot
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD:-root123}
      - POSTGRES_USER=harbor_user
      - POSTGRES_PASSWORD=${DB_PASSWORD:-root123}
      - POSTGRES_USER=harbor_user
      - POSTGRES_DB=harbor

  registry:
    image: goharbor/registry-photon:v2.12.0
    container_name: registry
    restart: always
    user: "10000:10000"
    volumes:
      - /data/harbor/registry:/storage:rw
      - ./certs:/certs:rw
    networks:
      harbor-net:
        aliases:
          - registry.local
      paqbot_network:
        aliases:
          - registry.paqbot
    environment:
      - REGISTRY_HTTP_SECRET=${REGISTRY_SECRET:-change-this-secret}
      - REGISTRY_STORAGE_DELETE_ENABLED=true
      - REGISTRY_MIDDLEWARE_REPOSITORY_NAME=harbor-core
      - REGISTRY_NOTIFICATION_URLS=http://harbor-core:8084/service/notifications

  redis:
    image: goharbor/redis-photon:v2.12.0
    container_name: redis
    restart: always
    user: "10000:10000"
    volumes:
      - /data/harbor/redis:/var/lib/redis:rw
    networks:
      harbor-net:
        aliases:
          - redis.local
      paqbot_network:
        aliases:
          - redis.paqbot

  content-trust:
    image: goharbor/notary-server-photon:v2.12.0
    container_name: content-trust
    restart: always
    networks:
      - harbor-net
      - paqbot_network
    depends_on:
      - harbor-db
    environment:
      - NOTARY_SERVER_LOGGING_LEVEL=info
      - DB_URL=postgres://harbor_user:${DB_PASSWORD:-root123}@harbor-db:5432/notary_server?sslmode=disable
      
  content-filter:
    image: goharbor/clair-photon:v2.12.0
    container_name: content-filter
    restart: always
    networks:
      - harbor-net
      - paqbot_network
    depends_on:
      - harbor-db
      - harbor-core
    volumes:
      - /data/harbor/clair:/clair:rw
    environment:
      - CLAIR_DB_HOST=harbor-db
      - CLAIR_DB_PORT=5432
      - CLAIR_DB_DATABASE=clair
      - CLAIR_DB_USERNAME=harbor_user
      - CLAIR_DB_PASSWORD=${DB_PASSWORD:-root123}

  paqbot_engine:
    image: paqbot_engine:latest
    build:
      context: .
      dockerfile: Dockerfile.engine
    ports:
      - "5000:5000"  # Aligned with engine.py and Dockerfile.engine
    networks:
      - paqbot_network
    environment:
      - ENV=production
    restart: unless-stopped

  paqbot_server:
    image: paqbot_server:latest
    build:
      context: .
      dockerfile: Dockerfile.server
    ports:
      - "8050:8050"  # Removed unnecessary port translation
    networks:
      - paqbot_network
    environment:
      - ENV=production
    restart: unless-stopped
    depends_on:
      - paqbot_engine